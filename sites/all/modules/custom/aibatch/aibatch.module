<?php
/**
 * @file
 * Manage objects and galleries that are used in the Mobile APP. 
 
 * Objects and galleries have some data stored in Drupal, and some coming from SOLR queries to the 
 * Chicago Art Institute's existing DB.  Objects physical location can be pinned on a Google Map of the Institute. 
 
 * This module creates a button that when clicked, pulls all the published content into a JSON file (appData.json) at 
 * the site root, which is then called by the mobile APP.
 
 * Email notices are also fired when objects are pulled out of galleries or added back into galleries. 
 */

/** 
* Implementation of hook_menu()
*/
function aibatch_menu(){
	$items['admin/config/content/batch'] = array(
		'title' => 'Perform a Batch upload',
		'page callback' => 'aibatch_config',
		'type' => MENU_NORMAL_ITEM,
		'weight' => 20,
		'access arguments' => array('administer nodes'),
	);
 return $items;
}

/**
* page callback
**/
function aibatch_config() {
    $output = '<p>The files should be already on the server.</p>';
    $fm = drupal_get_form('aibatch_audio_form');
    $fm2 = drupal_get_form('aibatch_object_form');
    return $output .render($fm). render($fm2);
}


/** 
* Implementation of hook_block_info()
*/
function aibatch_audio_form() {
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Parse the Audio CSV'),
      '#attributes' => array('class' => array('button')),
    );
    return $form;
}


/**
 * Implementation of hook_block_info()
 */
function aibatch_object_form() {
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Parse the Object CSV'),
    '#attributes' => array('class' => array('button')),
  );
  return $form;
}

/**
 * hook_form_submit() implementation
 **/
function aibatch_audio_form_submit($form, &$form_state) {
  global $user;

  try {
    $row = 0;
    if($_SERVER['SERVER_NAME'] == 'aic') {
      $path = '/Users/tom/Websites/AIC-admin/aic-museum/sites/all/modules/custom/aibatch/audio-files.csv';
      $audioFilePath = '/Users/tom/Websites/AIC-admin/aic-museum/sites/default/files/audio/';
    } else {
      $path = '/var/www/html/sites/all/modules/custom/aibatch/audio-files.csv';
      $audioFilePath = '/var/www/html/sites/default/files/audio/';
    }
    if (($handle = fopen($path, "r")) !== FALSE) {
      while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        if(!empty($data[1])) {
          $row++;
          $e = entity_create('node', array('type' => 'audio'));
          $e->uid = $user->uid;
          $entity = entity_metadata_wrapper('node', $e);
          $entity->title = (string) $data[0];
          if (file_exists($audioFilePath . $data[1])) {
            $obj = file_save((object) array(
              'filename' => $data[1],
              'uri' => 'public://audio/'.$data[1],
              'status' => FILE_STATUS_PERMANENT,
              'filemime' => file_get_mimetype($audioFilePath . $data[1]),
              'display' => 1,
            ));
            $entity->field_audio_file->set((array) $obj);
          }
          if($data[2] != "\"Transcript to be added Soon\"") {
            $entity->field_audio_transcript->set($data[2]);
          }
          $entity->save();
        }
      }
      fclose($handle);
    }
    drupal_set_message('success, number of files created: '.$row, 'status');
  } catch (Exception $e) {
    drupal_set_message('There was a problem: '. $e, 'error');
    return '';
  }
}

/**
 * hook_form_submit() implementation
 **/
function aibatch_object_form_submit($form, &$form_state) {
  global $user;

  try {
    $row = 0;
    if($_SERVER['SERVER_NAME'] == 'aic') {
      $path = '/Users/tom/Websites/AIC-admin/aic-museum/sites/all/modules/custom/aibatch/objects.csv';
    } else {
      $path = '/var/www/html/sites/all/modules/custom/aibatch/objects.csv';
    }
    if (($handle = fopen($path, "r")) !== FALSE) {
      while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        if(!empty($data[1]) && $row > 0) {
          $row++;
          $e = entity_create('node', array('type' => 'object'));
          $e->uid = $user->uid;
          $entity = entity_metadata_wrapper('node', $e);
          $entity->title = (string) $data[1];
          $entity->field_in_gallery->set(1);
          $entity->field_object_id->set((int) $data[0]);
          $entity->field_object_selector_number->set($data[2]);

          //object_audio
          $query = "SELECT f.fid, f.filename, fu.id as nid FROM file_managed f, file_usage fu 
            WHERE f.fid = fu.fid
            AND fu.type = 'node'
            AND (f.filename = '".cq($data[3])."'" ;
          if (!empty($data[4])) {
            $query .= " OR filename = '".cq($data[4])."'";
          }
          if (!empty($data[5])) {
            $query .= " OR filename = '".cq($data[5])."'";
          }
          $query .= ')';
          $result = db_query($query);

          //set the multivalue node reference fields (nid NOT fid)
          foreach($result as $item){
            $entity->field_object_audio[] =$item->nid;
          }

          $loc = cq($data[6]).', '.cq($data[7]);
          $entity->field_location->set($loc);

          //make the SOLR query to get the gallery_location and obj_reference_number
          $obj = new stdClass();
          _getSOLRdata($obj, trim($data[0])); //in aicapp.module
          if(isset($obj->main_reference_number)) {
            $entity->field_reference_num->set($obj->main_reference_number);
          }
          if(isset($obj->gallery_location)) {
            $entity->field_gallery_location->set($obj->gallery_location);
          }
          if(isset($obj->in_gallery)) {
            $entity->field_in_gallery->set($obj->in_gallery);
          }
          $entity->save();
        } else {
          $row++;
        }
      }
      fclose($handle);
    }
    drupal_set_message('success, number of objects created: '.$row, 'status');
  } catch (Exception $e) {
    drupal_set_message('There was a problem: '. $e, 'error');
    return '';
  }
}


function cq($str) {
  return str_replace('"', '', $str);
}